# Parse semantic version string including prerelease and build metadata
function(parse_semantic_version VERSION_STRING)
    # Extract base version (major.minor.patch)
    string(REGEX MATCH "^([0-9]+)\\.([0-9]+)\\.([0-9]+)" BASE_VERSION ${VERSION_STRING})
    set(VERSION_MAJOR ${CMAKE_MATCH_1} PARENT_SCOPE)
    set(VERSION_MINOR ${CMAKE_MATCH_2} PARENT_SCOPE)
    set(VERSION_PATCH ${CMAKE_MATCH_3} PARENT_SCOPE)
    
    # Extract prerelease (everything after - and before +)
    string(REGEX MATCH "-([^+]*)" PRERELEASE_MATCH ${VERSION_STRING})
    if(PRERELEASE_MATCH)
        set(VERSION_PRERELEASE ${CMAKE_MATCH_1} PARENT_SCOPE)
        set(VERSION_IS_PRERELEASE TRUE PARENT_SCOPE)
    else()
        set(VERSION_PRERELEASE "" PARENT_SCOPE)
        set(VERSION_IS_PRERELEASE FALSE PARENT_SCOPE)
    endif()
    
    # Extract build metadata (everything after +)
    string(REGEX MATCH "\\+(.*)$" BUILD_MATCH ${VERSION_STRING})
    if(BUILD_MATCH)
        set(VERSION_BUILD ${CMAKE_MATCH_1} PARENT_SCOPE)
    else()
        set(VERSION_BUILD "" PARENT_SCOPE)
    endif()
endfunction()