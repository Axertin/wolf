# generate_sources.cmake â€” Run with: cmake -P generate_sources.cmake -DSOURCE_DIR=... -DTARGET_NAME=... -DSEARCH_DIR=...
# This script generates src/{target}/sources.cmake *only if* the contents have changed.

if(NOT DEFINED SOURCE_DIR)
    message(FATAL_ERROR "SOURCE_DIR not defined")
endif()

if(NOT DEFINED TARGET_NAME)
    message(FATAL_ERROR "TARGET_NAME not defined")
endif()

if(NOT DEFINED SEARCH_DIR)
    message(FATAL_ERROR "SEARCH_DIR not defined")
endif()

set(TARGET_DIR "${SOURCE_DIR}/src/${TARGET_NAME}")
set(OUTPUT_FILE "${TARGET_DIR}/sources.cmake")
set(TEMP_FILE "${OUTPUT_FILE}.tmp")

# Find all .cpp files relative to TARGET_DIR
file(GLOB_RECURSE CPP_FILES
    RELATIVE "${TARGET_DIR}"
    "${SOURCE_DIR}/${SEARCH_DIR}/*.cpp"
)

# Create the temporary version of the output
file(WRITE "${TEMP_FILE}" "# Auto-generated by generate_sources.cmake\n")
file(APPEND "${TEMP_FILE}" "set(${TARGET_NAME}_SOURCES\n")

foreach(source_file IN LISTS CPP_FILES)
    file(APPEND "${TEMP_FILE}" "  \${CMAKE_CURRENT_SOURCE_DIR}/${source_file}\n")
endforeach()

file(APPEND "${TEMP_FILE}" ")\n")

# Compare with existing version
set(NEEDS_UPDATE TRUE)
if(EXISTS "${OUTPUT_FILE}")
    file(READ "${OUTPUT_FILE}" EXISTING_CONTENT)
    file(READ "${TEMP_FILE}" NEW_CONTENT)
    if(EXISTING_CONTENT STREQUAL NEW_CONTENT)
        set(NEEDS_UPDATE FALSE)
        file(REMOVE "${TEMP_FILE}")
    endif()
endif()

# Replace only if changed
if(NEEDS_UPDATE)
    file(RENAME "${TEMP_FILE}" "${OUTPUT_FILE}")
    message(STATUS "Updated: ${OUTPUT_FILE}")
else()
    message(STATUS "No change: ${OUTPUT_FILE}")
endif()
